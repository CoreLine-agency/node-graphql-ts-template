/*** AUTOGENERATED FILE: you can only modify parts of the file within <keep-*> tags ***/
// tslint:disable max-line-length
import { asPromise } from '../../../../utils/as-promise';
import { IRequestContext } from '../../../IRequestContext';
import { Talent } from '../../../Talent/models/Talent'; ''
import { Agent } from '../../../Agent/models/Agent';
import { AgentNestedInput } from '../../../inputs/AgentNestedInput';

export async function updateAgentRelation(talent: Talent, agent: AgentNestedInput | null | undefined, context: IRequestContext) {
  const existingAgent = await talent.agent;

  if (agent === null) {
    talent.agent = Promise.resolve(null);
  } else if (agent === undefined) {
    // do nothing
  } else if (agent.id) {
    const agentModel = await context.em.findOneOrFail(Agent, agent.id);
    talent.agent = asPromise(await agentModel.update(agent, context));
  } else if (existingAgent) {
    await existingAgent.update(agent, context);
  } else {
    talent.agent = asPromise(await new Agent().update(agent, context));
  }
}
