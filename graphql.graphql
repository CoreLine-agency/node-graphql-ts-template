"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""ID scalar type"""
scalar EntityId

type File {
  id: EntityId!
  contentBase64: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  url: String!
  thumbUrl: String!
}

input FileCreateInput {
  contentBase64: String!
}

input FileEditInput {
  id: EntityId!
  contentBase64: String
}

input FileSearchInput {
  id: EntityId
  contentBase64: String
}

input FileSearchOrderInput {
  id: OrderEnum
  contentBase64: OrderEnum
}

type LoginResponse {
  token: String!
  user: User!
}

type Mutation {
  emailRegister(input: UserCreateInput!): LoginResponse!
  emailLogin(password: String!, email: String!): LoginResponse!
  logout: Boolean!
  createFile(input: FileCreateInput!): File!
  updateFile(input: FileEditInput!): File!
  deleteFiles(ids: [ID!]!): Boolean!
  createUser(input: UserCreateInput!): User!
  updateUser(input: UserEditInput!): User!
  deleteUsers(ids: [ID!]!): Boolean!
}

enum OrderEnum {
  DESC
  ASC
}

type PaginatedFileResponse {
  items: [File!]!
  total: Int!
  hasMore: Boolean!
  nextPage: Int!
}

type PaginatedUserResponse {
  items: [User!]!
  total: Int!
  hasMore: Boolean!
  nextPage: Int!
}

type Query {
  file(id: EntityId!): File!
  searchFiles(order: [FileSearchOrderInput!], take: Int, skip: Int, search: FileSearchInput): PaginatedFileResponse!
  files: [File!]!
  user(id: EntityId!): User!
  searchUsers(order: [UserSearchOrderInput!], take: Int, skip: Int, search: UserSearchInput): PaginatedUserResponse!
  users: [User!]!
}

type User {
  id: EntityId!
  email: String
  firstName: String!
  lastName: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  fullName: String!
}

input UserCreateInput {
  email: String
  password: String!
  firstName: String!
  lastName: String!
}

input UserEditInput {
  id: EntityId!
  email: String
  password: String
  firstName: String
  lastName: String
}

input UserSearchInput {
  id: EntityId
  email: String
  password: String
  firstName: String
  lastName: String
}

input UserSearchOrderInput {
  id: OrderEnum
  email: OrderEnum
  password: OrderEnum
  firstName: OrderEnum
  lastName: OrderEnum
}
